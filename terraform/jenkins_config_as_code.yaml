credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "Docker Hub"
          id: "docker-hub"
          password: "{AQAAABAAAAAwvpXOeMVDMIel2sI4OLlU8YJ4HAtEj781oUJ10sdjzcVMN4brx0PGKEqfxC7RxtchKHTctjhWcx9CvGK+wCzgGg==}"
          scope: GLOBAL
          username: "jose9123"
jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin\n\n"
  scmCheckoutRetryCount: 2
  labelAtoms:
  - name: "built-in"
  - name: "jenkins-jenkins-agent"
  - name: "master"
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pipelineStepsAWS:
    enableCredentialsFromNode: false
  pollSCM:
    pollingThreadCount: 10
  thinBackup:
    backupAdditionalFiles: false
    backupBuildArchive: false
    backupBuildResults: false
    backupBuildsToKeepOnly: false
    backupConfigHistory: false
    backupNextBuildNumber: false
    backupPath: "/var/jenkins_home/thinBackup/"
    backupPluginArchives: false
    backupUserContents: false
    cleanupDiff: true
    failFast: true
    forceQuietModeTimeout: 120
    moveOldBackupsToZipFile: false
    nrMaxStoredFull: 7
    waitForIdle: false
tool:
  go:
    installations:
    - name: "Go-1.21.9"
      properties:
      - installSource:
          installers:
          - golangInstaller:
              id: "1.21.9"
jobs:
  - script: >
      pipelineJob('wapi-app') {
        definition {
          cps {
              script("""
                pipeline {
                      agent any
                      environment {
                          GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no' // Skip host key checking
                          DOCKERHUB_CREDS = credentials('docker-hub')
                          USERNAME = "${env.DOCKERHUB_CREDS_USR}"
                          PASSWORD = "${env.DOCKERHUB_CREDS_PSW}"
                      }
                      stages {
                         stage('Checkout') {
                            steps { git branch: 'dev', url: 'https://github.com/jmontilla202/inadev-devops-exercise.git' }
                          }
                          stage('Build') {
                              steps {
                                  echo 'hello'
                              }
                          }
                          stage('Deploy') {
                              steps {
                                sh '''
                                echo deply
                              '''
                            }
                          }
                      }
                }
              """.stripIndent()) sandbox()
          }
        }
      }

# - url: https://raw.githubusercontent.com/jmontilla202/inadev-devops-exercise/dev/inadev-job.groovy


credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "Docker Hub"
          id: "docker-hub"
          password: "{AQAAABAAAAAwvpXOeMVDMIel2sI4OLlU8YJ4HAtEj781oUJ10sdjzcVMN4brx0PGKEqfxC7RxtchKHTctjhWcx9CvGK+wCzgGg==}"
          scope: GLOBAL
          username: "jose9123"
jenkins:
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code plugin\n\n"
  scmCheckoutRetryCount: 2
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
      jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
      name: "kubernetes"
      namespace: "jenkins"
      podLabels:
      - key: "jenkins/jenkins-jenkins-agent"
        value: "true"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          envVars:
          - envVar:
              key: "JENKINS_URL"
              value: "http://jenkins.jenkins.svc.cluster.local:8080/"
          image: "jenkins/inbound-agent:3206.vb_15dcf73f6a_9-3"
          name: "jnlp"
          resourceLimitCpu: "2048m"
          resourceLimitMemory: "2048Mi"
          resourceRequestCpu: "1024m"
          resourceRequestMemory: "1024Mi"
          workingDir: "/home/jenkins/agent"
        id: "3299fd0af63fe1657951f62572fa2033b41c6da3e26306a1f6bbbdf095291cb2"
        label: "jenkins-agent"
        name: "jenkins-agent"
        namespace: "jenkins"
        nodeUsageMode: NORMAL
        podRetention: "never"
        serviceAccount: "default"
        slaveConnectTimeout: 100
        slaveConnectTimeoutStr: "100"
        yamlMergeStrategy: "override"
  labelAtoms:
  - name: "built-in"
  - name: "jenkins-jenkins-agent"
  - name: "master"
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pipelineStepsAWS:
    enableCredentialsFromNode: false
  pollSCM:
    pollingThreadCount: 10
tool:
  go:
    installations:
    - name: "Go-1.21.9"
      properties:
      - installSource:
          installers:
          - golangInstaller:
              id: "1.21.9"
jobs:
  - script: >
    pipelineJob('wapi-app') {
        triggers {
            hudsonStartupTrigger {
              nodeParameterName("Built-In Node")
              label("master")
              quietPeriod("60")
              runOnChoice("False")
            }
        }
        definition {
                cps {
                  script("""   
                      pipeline {
                              agent {
                                kubernetes {
                                  yaml '''
                                    apiVersion: v1
                                    kind: Pod
                                    metadata:
                                      labels:
                                        app: wapi
                                        version: v0.1
                                    spec:
                                      containers:
                                      - name: golang
                                        image: golang:1.21.9
                                        command:
                                        - cat
                                        tty: true
                                      - name: docker
                                        image: docker:latest
                                        command:
                                        - cat
                                        tty: true
                                        securityContext:
                                          allowPrivilegeEscalation: true
                                          runAsUser: 0
                                          runAsGroup: 0
                                          readOnlyRootFilesystem: false
                                          privileged: true
                                    '''
                            retries 2
                          }
                              }
                            environment {
                                GIT_SSH_COMMAND = 'ssh -o StrictHostKeyChecking=no' // Skip host key checking
                            }
                            stages {
                                stage('Checkout') {
                                    steps {
                                        git branch: 'dev', url: 'https://github.com/jmontilla202/inadev-devops-exercise.git'
                                    }
                                }
                                stage('Build') {
                                    steps {
                                      container('golang') {
                                      sh '''
                                          cd src
                                        go get "github.com/gin-gonic/gin"
                                        go build -buildvcs=false
                                      '''
                                    }
                                    container('docker') {
                                      sh '''
                                          dockerd --iptables=false --tls=false --bridge=none -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --data-root /var/lib/docker &
                                          sleep 5
                                          docker build -t jose9123/wapi:latest .
                                          #docker push jose9123/wapi:latest
                                          docker images
                                      '''
                                    }
                                  }
                              }
                              stage('Deploy') {
                                    steps {
                                      sh '''
                                      echo deply
                                    '''
                                  }
                              }
                            }
                        }
                   """.stripIndent())
                 sandbox()
                 }
           }
         }
        